/* -----------------------------------------------  

Site Name: Ian James Cox - Digital Designer Manchester
File: Plugins JS
Author: Abid Din (@craftedpixelz)
Version: 1.0
Copyright (c): Ian James Cox
  
------------------------------------------------ */

// QueryLoader:
(function(a) {
    if (!Array.prototype.indexOf) {
        Array.prototype.indexOf = function(a) {
            var b = this.length >>> 0;
            var c = Number(arguments[1]) || 0;
            c = c < 0 ? Math.ceil(c) : Math.floor(c);
            if (c < 0) c += b;
            for (; c < b; c++) {
                if (c in this && this[c] === a) return c
            }
            return -1
        }
    }
    var b = new Array;
    var c = 0;
    var d = false;
    var e = "";
    var f = "";
    var g = "";
    var h = "";
    var i = 0;
    var j = 0;
    var k = {
        onComplete: function() {},
        backgroundColor: "#000",
        barColor: "#fff",
        barHeight: 1,
        percentage: false,
        deepSearch: true,
        completeAnimation: "fade",
        minimumTime: 500,
        onLoadComplete: function() {
            if (k.completeAnimation == "grow") {
                var b = 500;
                var c = new Date;
                if (c.getTime() - j < k.minimumTime) {
                    b = k.minimumTime - (c.getTime() - j)
                }
                a(g).stop().animate({
                    width: "100%"
                }, b, function() {
                    a(this).animate({
                        top: "0%",
                        width: "100%",
                        height: "100%"
                    }, 500, function() {
                        a(f).fadeOut(500, function() {
                            a(this).remove();
                            k.onComplete()
                        })
                    })
                })
            } else {
                a(f).fadeOut(500, function() {
                    a(f).remove();
                    k.onComplete()
                })
            }
        }
    };
    var l = function() {
        var a = new Date;
        j = a.getTime();
        m();
        q()
    };
    var m = function() {
        e = a("<div></div>").appendTo("body").css({
            display: "none",
            width: 0,
            height: 0,
            overflow: "hidden"
        });
        for (var c = 0; b.length > c; c++) {
            i++;
            a.ajax({
                url: b[c],
                type: "HEAD",
                error: function(a, b) {
                    i--
                },
                success: function(a) {
                    if (!d) {
                        n(this["url"])
                    }
                }
            })
        }
    };
    var n = function(b) {
        var c = a("<img />").attr("src", b).bind("load", function() {
            o()
        }).appendTo(e)
    };
    var o = function() {
        c++;
        var b = c / i * 100;
        a(g).stop().animate({
            width: b + "%",
            minWidth: b + "%"
        }, 200);
        if (k.percentage == true) {
            a(h).text(Math.ceil(b) + "%")
        }
        if (c == i) {
            p()
        }
    };
    var p = function() {
        a(e).remove();
        k.onLoadComplete();
        d = true
    };
    var q = function() {
        f = a("<div id='qLoverlay'></div>").css({
            width: "100%",
            height: "100%",
            backgroundColor: k.backgroundColor,
            backgroundPosition: "fixed",
            position: "fixed",
            zIndex: 666999,
            top: 0,
            left: 0
        }).appendTo("body");
        g = a("<div id='qLbar'></div>").css({
            height: k.barHeight + "px",
            marginTop: "-" + k.barHeight / 2 + "px",
            backgroundColor: k.barColor,
            width: "0%",
            position: "absolute",
            top: "50%"
        }).appendTo(f);
        if (k.percentage == true) {
            h = a("<div id='qLpercentage'></div>").text("0%").css({
                height: "40px",
                width: "100px",
                position: "absolute",
                fontSize: "3em",
                top: "50%",
                left: "50%",
                marginTop: "-" + (59 + k.barHeight) + "px",
                textAlign: "center",
                marginLeft: "-50px",
                color: k.barColor
            }).appendTo(f)
        }
    };
    var r = function(c) {
        var d = "";
        if (a(c).css("background-image") != "none") {
            var d = a(c).css("background-image")
        } else if (typeof a(c).attr("src") != "undefined" && c.nodeName.toLowerCase() == "img") {
            var d = a(c).attr("src")
        }
        if (d.indexOf("gradient") == -1) {
            d = d.replace(/url\(\"/g, "");
            d = d.replace(/url\(/g, "");
            d = d.replace(/\"\)/g, "");
            d = d.replace(/\)/g, "");
            var e = d.split(", ");
            for (var f = 0; f < e.length; f++) {
                if (e[f].length > 0 && b.indexOf(e[f]) == -1) {
                    var g = "";
                    if ($("html").hasClass("ie7, ie8")) {
                        g = "?" + Math.floor(Math.random() * 3e3)
                    }
                    b.push(e[f] + g)
                }
            }
        }
    };
    a.fn.queryLoader2 = function(b) {
        if (b) {
            a.extend(k, b)
        }
        this.each(function() {
            r(this);
            if (k.deepSearch == true) {
                a(this).find("*:not(script)").each(function() {
                    r(this)
                })
            }
        });
        l();
        return this
    }
})(jQuery);

// Scrollpath:
(function(a, b, c, d) {
    function x(b, c) {
        function u(a, b) {
            h = a;
            k = b
        }

        function v(a, b) {
            o = Math.min(a, o);
            p = Math.min(b, p);
            m = Math.max(a, m);
            n = Math.max(b, n)
        }
        var d = 40,
            e = b,
            g = c,
            h = 0,
            k = 0,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0,
            q = [{
                method: "moveTo",
                args: [0, 0]
            }],
            r = [],
            s = {}, t = {
                rotate: null,
                callback: null,
                name: null
            };
        this.rotate = function(b, c) {
            var d = a.extend({}, t, c),
                e = Math.abs(b - l),
                i = Math.round(e / g) * j,
                m = (b - l) / i,
                n = 1;
            if (!f) {
                if (d.name || d.callback) {
                    this.moveTo(h, k, {
                        callback: d.callback,
                        name: d.name
                    })
                }
                return this
            }
            for (; n <= i; n++) {
                r.push({
                    x: h,
                    y: k,
                    rotate: l + m * n,
                    callback: n === i ? d.callback : null
                })
            }
            if (d.name) s[d.name] = r.length - 1;
            l = b % (Math.PI * 2);
            return this
        };
        this.moveTo = function(b, c, d) {
            var e = a.extend({}, t, d),
                f = r.length ? j : 1;
            i = 0;
            for (; i < f; i++) {
                r.push({
                    x: b,
                    y: c,
                    rotate: e.rotate !== null ? e.rotate : l,
                    callback: i === f - 1 ? e.callback : null
                })
            }
            if (e.name) s[e.name] = r.length - 1;
            u(b, c);
            v(b, c);
            q.push({
                method: "moveTo",
                args: arguments
            });
            return this
        };
        this.lineTo = function(b, c, d) {
            var g = a.extend({}, t, d),
                i = b - h,
                m = c - k,
                n = S(i, m),
                o = Math.round(n / e) * j,
                p = i / o,
                w = m / o,
                x = g.rotate !== null && f,
                y = x ? (g.rotate - l) / o : 0,
                z = 1;
            for (; z <= o; z++) {
                r.push({
                    x: h + p * z,
                    y: k + w * z,
                    rotate: l + y * z,
                    callback: z === o ? g.callback : null
                })
            }
            if (g.name) s[g.name] = r.length - 1;
            l = x ? g.rotate : l;
            u(b, c);
            v(b, c);
            q.push({
                method: "lineTo",
                args: arguments
            });
            return this
        };
        this.arc = function(b, c, d, g, i, m, n) {
            var o = a.extend({}, t, n),
                p = b + Math.cos(g) * d,
                w = c + Math.sin(g) * d,
                x = b + Math.cos(i) * d,
                y = c + Math.sin(i) * d,
                z = O(g, i, m),
                A = d * z,
                B = Math.round(A / e) * j,
                C = z / B * (m ? -1 : 1),
                D = o.rotate !== null && f,
                E = D ? (o.rotate - l) / B : 0,
                F = 1;
            if (h !== p || k !== w) {
                this.lineTo(p, w)
            }
            for (; F <= B; F++) {
                r.push({
                    x: b + d * Math.cos(g + C * F),
                    y: c + d * Math.sin(g + C * F),
                    rotate: l + E * F,
                    callback: F === B ? o.callback : null
                })
            }
            if (o.name) s[o.name] = r.length - 1;
            l = D ? o.rotate : l;
            u(x, y);
            v(b + d, c + d);
            v(b - d, c - d);
            q.push({
                method: "arc",
                args: arguments
            });
            return this
        };
        this.getPath = function() {
            return r
        };
        this.getNameMap = function() {
            return s
        };
        this.getCanvasPath = function() {
            var a = 0;
            for (; a < q.length; a++) {
                q[a].args[0] -= this.getPathOffsetX();
                q[a].args[1] -= this.getPathOffsetY()
            }
            return q
        };
        this.getPathWidth = function() {
            return m - o + d
        };
        this.getPathHeight = function() {
            return n - p + d
        };
        this.getPathOffsetX = function() {
            return o - d / 2
        };
        this.getPathOffsetY = function() {
            return p - d / 2
        }
    }

    function y() {
        if (!v.scrollBar) return;
        s = a("<div>").addClass("sp-scroll-bar").on("mousedown", function(a) {
            var b = Math.round((a.offsetY || a.clientY) / s.height() * (q.length - 1));
            if (Math.abs(b - o) > k) {
                b = o + 5 * j * (b > o ? 1 : -1)
            }
            G(b);
            a.preventDefault();
            return false
        });
        t = a("<div>").addClass("sp-scroll-handle").on({
            click: function(a) {
                a.preventDefault();
                return false
            },
            mousedown: function(a) {
                if (a.button !== 0) return;
                m = true;
                a.preventDefault();
                return false
            }
        });
        a(c).on({
            mouseup: function(a) {
                m = false
            },
            mousemove: function(a) {
                if (m) D(a)
            }
        });
        a("body").prepend(s.append(t))
    }

    function z() {
        if (!v.drawPath || !g) return;
        var b, c = {
                position: "absolute",
                "z-index": 1000,
                left: p.getPathOffsetX(),
                top: p.getPathOffsetY(),
                "pointer-events": "none"
            };
        L(c, "user-select", "none");
        L(c, "user-drag", "none");
        b = a("<canvas>").attr("id", "canvas").css(c).prependTo(r);
        b[0].width = p.getPathWidth();
        b[0].height = p.getPathHeight();
        A(b[0].getContext("2d"), p.getCanvasPath())
    }

    function A(a, b) {
        var c = 0;
        a.strokeStyle = "black";
        a.lineJoin = "round";
        a.lineCap = "round";
        a.lineWidth = 16;
        for (; c < b.length; c++) {
            a[b[c].method].apply(a, b[c].args)
        }
        a.stroke()
    }

    function B(c) {
        var d = c.originalEvent.wheelDelta || -c.originalEvent.detail,
            e = d / Math.abs(d);
        c.preventDefault();
        a(b).scrollTop(0).scrollLeft(0);
        E(-e * j)
    }

    function C(a) {
        if (/^text/.test(a.target.type)) return;
        switch (a.keyCode) {
            case 40:
                E(j);
                break;
            case 38:
                E(-j);
                break;
            case 34:
                E(k);
                break;
            case 33:
                E(-k);
                break;
            case 32:
                E(k * (a.shiftKey ? -1 : 1));
                break;
            case 35:
                G(q.length - 1);
                break;
            case 36:
                G(0);
                break
        }
    }

    function D(a) {
        var b, c = a.clientY - s.offset().top;
        b = P(Math.round(c / s.height() * (q.length - 1)), 0, q.length - 1);
        G(Q(b, j))
    }

    function E(a) {
        G(I(o + a))
    }

    function F(b, c, d, e) {
        if (b === 0 || n) return;
        if (!c || typeof c !== "number") {
            if (typeof c === "function") c();
            return E(b)
        }
        n = true;
        var f = c / 1e3 * h,
            g = o,
            i = 0,
            j, k, l = setInterval(function() {
                j = Math.round((a.easing[d] || a.easing.swing)(++i / f, c / f * i, 0, b, c));
                k = I(g + j);
                if (i === f) {
                    clearInterval(l);
                    if (typeof d === "function") {
                        d()
                    } else if (e) {
                        e()
                    }
                    n = false
                }
                G(k, true)
            }, c / f)
    }

    function G(a, b) {
        if (n && !b) return;
        var c;
        if (q[a]) {
            c = q[a].callback;
            r.css(J(q[a]))
        }
        if (t) t.css("top", a / (q.length - 1) * (s.height() - t.height()) + "px");
        if (c && a !== o && !n) c();
        o = a
    }

    function H(a) {
        return p.getNameMap()[a]
    }

    function I(a) {
        if (v.wrapAround) {
            if (n) {
                while (a < 0) a += q.length;
                while (a >= q.length) a -= q.length
            } else {
                if (a < 0) a = q.length - 1;
                if (a >= q.length) a = 0
            }
        } else {
            a = P(a, 0, q.length - 1)
        }
        return a
    }

    function J(c) {
        var d = c.x - a(b).width() / 2,
            e = c.y - a(b).height() / 2,
            f = {};
        if (R(c.rotate) === 0) {
            f.left = -d;
            f.top = -e;
            L(f, "transform-origin", "");
            L(f, "transform", "")
        } else {
            f.left = f.top = "";
            L(f, "transform-origin", c.x + "px " + c.y + "px");
            L(f, "transform", "translate(" + -d + "px, " + -e + "px) rotate(" + c.rotate + "rad)")
        }
        return f
    }

    function K() {
        var a = /^(Moz|Webkit|Khtml|O|ms|Icab)(?=[A-Z])/,
            b = c.getElementsByTagName("script")[0];
        for (var d in b.style) {
            if (a.test(d)) {
                return d.match(a)[0]
            }
        }
        if ("WebkitOpacity" in b.style) return "Webkit";
        if ("KhtmlOpacity" in b.style) return "Khtml";
        return ""
    }

    function L(a, b, c) {
        a[e + b] = a[b] = c
    }

    function M() {
        var a = c.createElement("dummy").style,
            b = ["transform", "WebkitTransform", "MozTransform", "OTransform", "msTransform", "KhtmlTransform"],
            e = 0;
        for (; e < b.length; e++) {
            if (a[b[e]] !== d) {
                return true
            }
        }
        return false
    }

    function N() {
        return !!c.createElement("canvas").getContext
    }

    function O(a, b, c) {
        var d = R(a),
            e = R(b),
            f = Math.abs(d - e),
            g = Math.PI * 2 - f;
        if (c && d < e || !c && d > e || d === e && a !== b) {
            return g
        }
        return f
    }

    function P(a, b, c) {
        if (a > c) {
            return c
        } else if (a < b) {
            return b
        }
        return a
    }

    function Q(a, b) {
        var c = a % b;
        if (c > b / 2) return a + b - c;
        return a - c
    }

    function R(a) {
        while (a < 0) {
            a += Math.PI * 2
        }
        return a % (Math.PI * 2)
    }

    function S(a, b) {
        return Math.sqrt(a * a + b * b)
    }
    var e = "-" + K().toLowerCase() + "-",
        f = M(),
        g = N(),
        h = 60,
        j = 50,
        k = j * 5,
        l = false,
        m = false,
        n = false,
        o, p, q, r, s, t, u = {
            scrollSpeed: 50,
            rotationSpeed: Math.PI / 15
        }, v = {
            wrapAround: false,
            drawPath: false,
            scrollBar: true
        }, w = {
            init: function(d) {
                if (this.length > 1 || l) a.error("jQuery.scrollPath can only be initialized on *one* element *once*");
                a.extend(v, d);
                l = true;
                r = this;
                q = p.getPath();
                z();
                y();
                G(0);
                r.css("position", "relative");
                a(c).on({
                    mousewheel: B,
                    DOMMouseScroll: "onmousewheel" in c ? null : B,
                    keydown: C,
                    mousedown: function(a) {
                        if (a.button === 1) {
                            a.preventDefault();
                            return false
                        }
                    }
                });
                a(b).on("resize", function() {
                    G(o)
                });
                return this
            },
            getPath: function(b) {
                a.extend(u, b);
                return p || (p = new x(u.scrollSpeed, u.rotationSpeed))
            },
            scrollTo: function(b, c, e, f) {
                var g = H(b);
                if (g === d) a.error("jQuery.scrollPath could not find scroll target with name '" + b + "'");
                var h = g - o;
                if (v.wrapAround && Math.abs(h) > q.length / 2) {
                    if (g > o) {
                        h = -o - q.length + g
                    } else {
                        h = q.length - o + g
                    }
                }
                F(h, c, e, f);
                return this
            }
        };
    a.fn.scrollPath = function(b) {
        if (w[b]) {
            return w[b].apply(this, Array.prototype.slice.call(arguments, 1))
        } else if (typeof b === "object" || !b) {
            return w.init.apply(this, arguments)
        } else {
            a.error("Method " + b + " does not exist on jQuery.scrollPath")
        }
    }
})(jQuery, window, document);

// jQuery Easing:
jQuery.easing["jswing"] = jQuery.easing["swing"];
jQuery.extend(jQuery.easing, {
    def: "easeOutQuad",
    swing: function(a, b, c, d, e) {
        return jQuery.easing[jQuery.easing.def](a, b, c, d, e)
    },
    easeInQuad: function(a, b, c, d, e) {
        return d * (b /= e) * b + c
    },
    easeOutQuad: function(a, b, c, d, e) {
        return -d * (b /= e) * (b - 2) + c
    },
    easeInOutQuad: function(a, b, c, d, e) {
        if ((b /= e / 2) < 1) return d / 2 * b * b + c;
        return -d / 2 * (--b * (b - 2) - 1) + c
    },
    easeInCubic: function(a, b, c, d, e) {
        return d * (b /= e) * b * b + c
    },
    easeOutCubic: function(a, b, c, d, e) {
        return d * ((b = b / e - 1) * b * b + 1) + c
    },
    easeInOutCubic: function(a, b, c, d, e) {
        if ((b /= e / 2) < 1) return d / 2 * b * b * b + c;
        return d / 2 * ((b -= 2) * b * b + 2) + c
    },
    easeInQuart: function(a, b, c, d, e) {
        return d * (b /= e) * b * b * b + c
    },
    easeOutQuart: function(a, b, c, d, e) {
        return -d * ((b = b / e - 1) * b * b * b - 1) + c
    },
    easeInOutQuart: function(a, b, c, d, e) {
        if ((b /= e / 2) < 1) return d / 2 * b * b * b * b + c;
        return -d / 2 * ((b -= 2) * b * b * b - 2) + c
    },
    easeInQuint: function(a, b, c, d, e) {
        return d * (b /= e) * b * b * b * b + c
    },
    easeOutQuint: function(a, b, c, d, e) {
        return d * ((b = b / e - 1) * b * b * b * b + 1) + c
    },
    easeInOutQuint: function(a, b, c, d, e) {
        if ((b /= e / 2) < 1) return d / 2 * b * b * b * b * b + c;
        return d / 2 * ((b -= 2) * b * b * b * b + 2) + c
    },
    easeInSine: function(a, b, c, d, e) {
        return -d * Math.cos(b / e * (Math.PI / 2)) + d + c
    },
    easeOutSine: function(a, b, c, d, e) {
        return d * Math.sin(b / e * (Math.PI / 2)) + c
    },
    easeInOutSine: function(a, b, c, d, e) {
        return -d / 2 * (Math.cos(Math.PI * b / e) - 1) + c
    },
    easeInExpo: function(a, b, c, d, e) {
        return b == 0 ? c : d * Math.pow(2, 10 * (b / e - 1)) + c
    },
    easeOutExpo: function(a, b, c, d, e) {
        return b == e ? c + d : d * (-Math.pow(2, -10 * b / e) + 1) + c
    },
    easeInOutExpo: function(a, b, c, d, e) {
        if (b == 0) return c;
        if (b == e) return c + d;
        if ((b /= e / 2) < 1) return d / 2 * Math.pow(2, 10 * (b - 1)) + c;
        return d / 2 * (-Math.pow(2, -10 * --b) + 2) + c
    },
    easeInCirc: function(a, b, c, d, e) {
        return -d * (Math.sqrt(1 - (b /= e) * b) - 1) + c
    },
    easeOutCirc: function(a, b, c, d, e) {
        return d * Math.sqrt(1 - (b = b / e - 1) * b) + c
    },
    easeInOutCirc: function(a, b, c, d, e) {
        if ((b /= e / 2) < 1) return -d / 2 * (Math.sqrt(1 - b * b) - 1) + c;
        return d / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + c
    },
    easeInElastic: function(a, b, c, d, e) {
        var f = 1.70158;
        var g = 0;
        var h = d;
        if (b == 0) return c;
        if ((b /= e) == 1) return c + d;
        if (!g) g = e * .3;
        if (h < Math.abs(d)) {
            h = d;
            var f = g / 4
        } else var f = g / (2 * Math.PI) * Math.asin(d / h);
        return -(h * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * e - f) * 2 * Math.PI / g)) + c
    },
    easeOutElastic: function(a, b, c, d, e) {
        var f = 1.70158;
        var g = 0;
        var h = d;
        if (b == 0) return c;
        if ((b /= e) == 1) return c + d;
        if (!g) g = e * .3;
        if (h < Math.abs(d)) {
            h = d;
            var f = g / 4
        } else var f = g / (2 * Math.PI) * Math.asin(d / h);
        return h * Math.pow(2, -10 * b) * Math.sin((b * e - f) * 2 * Math.PI / g) + d + c
    },
    easeInOutElastic: function(a, b, c, d, e) {
        var f = 1.70158;
        var g = 0;
        var h = d;
        if (b == 0) return c;
        if ((b /= e / 2) == 2) return c + d;
        if (!g) g = e * .3 * 1.5;
        if (h < Math.abs(d)) {
            h = d;
            var f = g / 4
        } else var f = g / (2 * Math.PI) * Math.asin(d / h); if (b < 1) return -.5 * h * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * e - f) * 2 * Math.PI / g) + c;
        return h * Math.pow(2, -10 * (b -= 1)) * Math.sin((b * e - f) * 2 * Math.PI / g) * .5 + d + c
    },
    easeInBack: function(a, b, c, d, e, f) {
        if (f == undefined) f = 1.70158;
        return d * (b /= e) * b * ((f + 1) * b - f) + c
    },
    easeOutBack: function(a, b, c, d, e, f) {
        if (f == undefined) f = 1.70158;
        return d * ((b = b / e - 1) * b * ((f + 1) * b + f) + 1) + c
    },
    easeInOutBack: function(a, b, c, d, e, f) {
        if (f == undefined) f = 1.70158;
        if ((b /= e / 2) < 1) return d / 2 * b * b * (((f *= 1.525) + 1) * b - f) + c;
        return d / 2 * ((b -= 2) * b * (((f *= 1.525) + 1) * b + f) + 2) + c
    },
    easeInBounce: function(a, b, c, d, e) {
        return d - jQuery.easing.easeOutBounce(a, e - b, 0, d, e) + c
    },
    easeOutBounce: function(a, b, c, d, e) {
        if ((b /= e) < 1 / 2.75) {
            return d * 7.5625 * b * b + c
        } else if (b < 2 / 2.75) {
            return d * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c
        } else if (b < 2.5 / 2.75) {
            return d * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c
        } else {
            return d * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c
        }
    },
    easeInOutBounce: function(a, b, c, d, e) {
        if (b < e / 2) return jQuery.easing.easeInBounce(a, b * 2, 0, d, e) * .5 + c;
        return jQuery.easing.easeOutBounce(a, b * 2 - e, 0, d, e) * .5 + d * .5 + c
    }
});
